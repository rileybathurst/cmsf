/*
	Theme Name:   Twenty Twenty One Child
	Description:  Twenty Twenty One Child Theme
	Theme URI:    https://cordellfoundation.org/
	Author:       Riley Bathurst
	Author URI:   http://rileybathurst.com
	Template:     twentytwentyone
	Version:      1.0.0
	Tags:         education, light, dark, responsive-layout, accessibility-ready
	Text Domain:  twentytwentyonechild
*/

/* body {
	background: rebeccapurple !important;
} */

:root {
	--maya: hsl(189.8, 81%, 37.1%);
	--cerulean: hsl(189.5, 90.9%, 25.9%);
	/* --seahorse: hsl(48.9, 98.4%, 49.4%); */
	
	/* theres a css-tricks about this i need to find again */
	--seahorse--base: 48.9, 98.4%;
	--seahorse--lighten: 49.4%;
	--seahorse: hsl(var(--seahorse--base), var(--seahorse--lighten));
	/* this can now be done inline */
	--seahorse-darken: hsl(var(--seahorse--base), calc(var(--seahorse--lighten) - 20%));

	--footer--color-link: var(--cerulean);
	--button-box-shadow-color: var(--global--color-light-gray);
}

.is-dark-theme.is-dark-theme {
	--button-box-shadow-color: var(--global--color-black);
}

::select {
	background: var(--seahorse);
}

/*------------------------------------*\
  #Patterns
\*------------------------------------*/

/* Theres a way of having this go left to right I just don't know what it is */

.cmsf-hero {
	/* padding: 0 !important; /* set this inline */
	display: grid;
	grid-template-columns: 1fr;
}

.cmsf-hero::select {
		background: var(--maya);
}

@media (min-width: 52rem) {
	.cmsf-hero >  {
		grid-template-columns: 1fr 26rem 26rem 1fr;
	}
}

.cmsf-hero > * {
	grid-row: 1;
}

.cmsf-hero > .wp-block-columns {
	grid-column: 1;
}

@media (min-width: 52rem) {
	.cmsf-hero > .wp-block-columns {
		grid-column: 2 / 4;
	}
}

.cmsf-hero > .wp-block-image {
	display: none;
	width: 100%;
	max-width: 100% !important; /* overwrite this might be the width of the image */
	height: 100%;
	min-height: 100%;
	object-fit: cover; /* this isnt there yet */
	margin-block-start: 0;
}

@media (min-width: 52rem) {
	.cmsf-hero > .wp-block-image {
		display: grid;
		grid-column: 3/5;
	}
}

.cmsf-hero > .wp-block-image > img {
	height: 100%;
	overflow-x: hidden;
}

/*------------------------------------*\
  #zero
\*------------------------------------*/

.cmsf-zero {
	padding: 0;
	display: grid;
	grid-template-columns: 1fr;
}

@media (min-width: 52rem) {
	.cmsf-zero {
		grid-template-columns: 1fr 26rem 26rem 1fr;
	}
}

.cmsf-zero > * {
	grid-row: 1;
}

.cmsf-zero > .wp-block-columns {
	grid-column: 1;
}

@media (min-width: 52rem) {
	.cmsf-zero > .wp-block-columns {
		grid-column: 2 / 4;
	}
}

.cmsf-zero > .wp-block-image {
	display: none;
	width: 100%;
	max-width: 100% !important; /* overwrite this might be the width of the image */
	height: 100%;
	min-height: 100%;
	object-fit: cover; /* this isnt there yet */
	margin-block-start: 0;
}

@media (min-width: 52rem) {
	.cmsf-zero > .wp-block-image {
		display: grid;
		grid-column: 1/3;
	}
}

.cmsf-zero > .wp-block-image > img {
	height: 100%;
	overflow-x: hidden;
}

/*------------------------------------*\
  #flex-columns
\*------------------------------------*/

.flex-columns > .wp-block-column {
	flex-grow: unset;
	flex-basis: auto;
}

.flex-columns svg {
	display: block;
	width: 2rem;
}

/*------------------------------------*\
  #Width
\*------------------------------------*/

/*
--responsive--aligndefault-width
--responsive--alignwide-width

.post-thumbnail, .entry-content .wp-audio-shortcode, .entry-content > :not(.alignwide):not(.alignfull):not(.alignleft):not(.alignright):not(.wp-block-separator):not(.woocommerce), [class*="inner-container"] > :not(.entry-content):not(.alignwide):not(.alignfull):not(.alignleft):not(.alignright):not(.wp-block-separator):not(.woocommerce), .default-max-width {
	max-width: var(--responsive--aligndefault-width);
	margin-left: auto;
	margin-right: auto;
}

@media only screen and (min-width: 822px) {
	:root {
		--responsive--aligndefault-width: min(calc(100vw - 8 * var(--global--spacing-horizontal)), 610px);
	}
}

https://developer.mozilla.org/en-US/docs/Web/CSS/min()
The min() function takes one or more comma-separated expressions as its parameter, with the smallest (most negative) expression value result used as the value.

pick the smallest
610 is the reality at it's widest
calc(100vw - 8 * var(--global--spacing-horizontal))

:root {
	--global--spacing-horizontal: 25px;
}

if this is the order
8 * 25 = 200

at vw = 822
822 - 200 = 622
this is weird its bigger than 610 so never gets used?

what if its in ltr order
622 - 8 = 614
614 * 25 = 15350
well thats ridiculous

@media only screen and (min-width: 822px) {

	:root {
		--responsive--aligndefault-width: min(calc(100vw - 8 * var(--global--spacing-horizontal)), 610px);
		--responsive--alignwide-width: min(calc(100vw - 8 * var(--global--spacing-horizontal)), 1240px);
	}
}

1240 or ???

822 - 200
622px


*/

/**
 * Root Media Query Variables
 */
:root {
	--responsive--spacing-horizontal: calc(2 * var(--global--spacing-horizontal) * 0.6);
	--responsive--aligndefault-width: calc(100vw - var(--responsive--spacing-horizontal));
	--responsive--alignwide-width: calc(100vw - var(--responsive--spacing-horizontal));
	--responsive--alignfull-width: 100%;
	--responsive--alignright-margin: var(--global--spacing-horizontal);
	--responsive--alignleft-margin: var(--global--spacing-horizontal);
}

@media only screen and (min-width: 482px) {

	:root {
		--responsive--aligndefault-width: min(calc(100vw - 4 * var(--global--spacing-horizontal)), 842px);
		--responsive--alignwide-width: calc(100vw - 4 * var(--global--spacing-horizontal));
		--responsive--alignright-margin: calc(0.5 * (100vw - var(--responsive--aligndefault-width)));
		--responsive--alignleft-margin: calc(0.5 * (100vw - var(--responsive--aligndefault-width)));
	}
}
@media only screen and (min-width: 822px) {

	:root {
		--responsive--aligndefault-width: min(calc(100vw - 8 * var(--global--spacing-horizontal)), 842px);
		--responsive--alignwide-width: min(calc(100vw - 8 * var(--global--spacing-horizontal)), 1240px);
	}
}


/*------------------------------------*\
  #Header this needs a little work in the php as well but as light as possible
\*------------------------------------*/

.site-header {
	display: grid;
	margin-block-end: 1rem;
	max-width: 100vw;
	padding-block: 0;
}

.site-header::before,
.site-header::after {
	display: none;
}

.site-header > * {
	grid-row: 1;
	grid-column: 1;
}

.site-header > img {
	object-fit: cover;
	width: 100%;
	max-height: 12rem; /* guess and check */
	z-index: 1;
	align-self: start;
}

.site-header svg {
	z-index: 2; /* show the curved background */
	align-self: end;
	margin-block-end: -1rem;
	fill: var(--global--color-background);
}

.site-header svg #hide {
	stroke: var(--global--color-background);
}

.home .site-header svg #hide {
	stroke: var(--cerulean);
}

.home .site-header svg {
	fill: var(--cerulean);
}

/* .site-header > img {
	object-fit: cover;
	width: 100%;
	max-height: 10rem;
	z-index: 1;
} */

.site-header .header-grid--overlay {
	background: var(--cerulean);
	mix-blend-mode: multiply;
	z-index: 2;
	height: 100%;
	border-bottom: 1rem solid white; /* variable this */
}

.home .site-header .header-grid--overlay {
	border-color: var(--cerulean);
}

.site-header .site-logo {
	height: 100%;
	max-height: 10rem; /* safari needs something */
	width: 100%;
	display: block;
	z-index: 3;
}

.site-header .site-title {
	color: var(--global--color-white); /* this could be a problem based on image */
}

.site-header .hero {
	z-index: 4;
	width: 100%;
	max-width: var(--responsive--aligndefault-width);
	margin-inline: auto;
	display: grid;
	padding-inline: 1rem;
}

.site-header	.hero > .site-branding {
	grid-row: 1;
	grid-column: 1;
	align-self: center;
	display: flex;
	align-items: baseline;
}

.site-header .site-logo {
	width: min-content;
	border-bottom: none;
}

.site-header .site-branding a {
	color: white;
	text-decoration: none;
}

.site-header .site-description {
	display: none;
}

/* .site-header a > svg {
	fill: var(--seahorse);
} */

.site-header button {
	grid-row: 2;
	grid-column: 2;
	justify-self: end;
	align-self: end;
	background-color: var(--cerulean) !important;
	border-radius: 0.5rem;
	/* offset-x | offset-y | blur-radius | color */
	box-shadow: 0.15rem 0.15rem 0.15rem var(--button-box-shadow-color);
	/* I want a light gray on light and a black on dark */
	box-shadow: var(--global--elevation);
}

.site-header button:hover {
	box-shadow: 0.15rem 0.15rem 0.15rem var(--global--color-gray);
	border-color: var(--global--color-gray);
}

/* this works to the site not the theme */
/* @media (prefers-color-scheme: dark) {
	.site-header button {
		box-shadow: 0.15rem 0.15rem 0.15rem var(--global--color-black);
	}
} */

.home .site-header button {
	background-color: var(--seahorse) !important; /* needed */
	box-shadow: var(--global--elevation);
}

.home .site-header button:hover {
	background-color: hsl(var(--seahorse--base), calc(var(--seahorse--lighten) - 5%)) !important; /* needed */
	border-color: hsl(var(--seahorse--base), calc(var(--seahorse--lighten) - 10%));
	color: revert; /* not sure if this is working or just breaking the right way */
}

.site-branding:last-child {
	width: auto;
}

.home .site-nav-wrapper {
	background: var(--cerulean);
}

.primary-navigation {
	max-width: var(--responsive--aligndefault-width);
	margin-left: auto;
	margin-right: auto;
}

.primary-navigation a:link {
	color: var(--cerulean);
}

.home .primary-navigation a:link {
	color: var(--seahorse);
}

.home .site-main {
	padding-top: 0;
}

/*------------------------------------*\
  #Footer
\*------------------------------------*/

.site-footer {
	max-width: 100vw !important;
	padding-bottom: 0;
}

.site-footer > svg {
	fill: lightgray;
	width: 100%;
	max-height: 2rem; /* guess and check might need to be responsive */
	display: block; /* get rid of space under */
	margin-bottom: 0;
	padding-bottom: 0;
}

.site-footer .widget-area {
	grid-template-columns: 1fr;
	margin-top: 0;
	margin-bottom: 0;
	padding-top: 0;
	padding-bottom: 0;
	max-width: 100vw;
}

#menu-footer-menu {
	/* max-width: var(--responsive--alignwide-width); */
	max-width: var(--responsive--aligndefault-width);
	margin-left: auto;
	margin-right: auto;
	display: flex;
	justify-content: space-between;
}

.site-footer .widget-area > * {
	margin-top: 0;
	margin-bottom: 0;
}

.site-footer ul {
	margin-block-end: 0;
}

.site-footer nav {
	background: lightgray; /* needs to be a variable */
	padding-block: 1rem;
}

.site-footer > .site-info {
	border-top: none;
	padding-top: 0;
	margin-top: 0;
	margin-bottom: 0;
	background: lightgray;
}

/* .site-footer .site-logo {
	margin: 0;
	max-width: 4rem;
}

.site-footer .site-logo img {
	max-width: 100%;
} */

.site-footer > .site-info > .site-name {
	max-width: var(--responsive--aligndefault-width);
	margin-left: auto;
	margin-right: auto;
	padding-block-end: 2rem;
	display: flex;
	align-items: baseline;
	gap: 1rem;
}

.site-footer > .copyright >p {
	max-width: var(--max-page);
	margin-inline: auto;
	margin-block: 0;
	padding-inline: 1rem;
}